version: '2.0'
services:
  app-server:
    image: fitness-app_app-server:latest
    container_name: app-server
    build:
      context: fitness-rest-api-back # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "6379:6969"
    restart: always
    depends_on:
      - elasticsearch
      - PostgreSQL
    environment:
       SPRING_DATASOURCE_URL: jdbc:postgresql://PostgreSQL:5432/fitness_db?useUnicode=true&serverTimezone=UTC
       SPRING_DATASOURCE_USERNAME: postgres
       SPRING_DATASOURCE_PASSWORD: qwerty
       SPRING_JPA_HIBERNATE_DDL_AUTO: update
       ELASTICSEARCH_URL: http://elasticsearch:9200
       SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend


  # Frontend Service
  app-client:
    image: fitness-app_app-client:latest
    container_name: app-client
    build:
      context: fitness-app-front # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
    ports:
      - "9090:3000"
    restart: always
    stdin_open: true
    depends_on:
      - app-server
    networks:
      - backend
    command: npm start

  PostgreSQL:
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_USER=postgres
      - POSTGRES_DB=fitness_db
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-cluster-7
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - backend

volumes:
  es-data01:
    driver: local

# Networks to be created to facilitate communication between containers
networks:
  backend:
    driver: bridge
