spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/fitness_db?useUnicode=true&serverTimezone=UTC
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update

  data:
    elasticsearch:
      repositories:
        enabled: true

  elasticsearch:
    rest:
      uris: http://localhost:9200

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 230531014795-r52rfim2k606qol8llmravametcn7k3r.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000,http://51.116.236.19,http://localhost:8080,http://51.116.236.19:8080 # Comma separated list of allowed origins
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - http://51.116.236.19:80/oauth2/redirect